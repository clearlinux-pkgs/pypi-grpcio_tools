--- grpcio_tools-1.66.0/third_party/abseil-cpp/absl/numeric/internal/bits.h~	2024-08-22 15:29:48.000000000 +0000
+++ grpcio_tools-1.66.0/third_party/abseil-cpp/absl/numeric/internal/bits.h	2024-08-23 14:32:01.284662369 +0000
@@ -303,13 +303,7 @@
 
 ABSL_ATTRIBUTE_ALWAYS_INLINE ABSL_INTERNAL_CONSTEXPR_CTZ inline int
 CountTrailingZeroesNonzero16(uint16_t x) {
-#if ABSL_HAVE_BUILTIN(__builtin_ctzs)
-  static_assert(sizeof(unsigned short) == sizeof(x),  // NOLINT(runtime/int)
-                "__builtin_ctzs does not take 16-bit arg");
-  return __builtin_ctzs(x);
-#else
   return CountTrailingZeroesNonzero32(x);
-#endif
 }
 
 template <class T>
--- grpcio_tools-1.66.0/third_party/abseil-cpp/absl/numeric/internal/bits.h~	2024-08-23 14:32:01.000000000 +0000
+++ grpcio_tools-1.66.0/third_party/abseil-cpp/absl/numeric/internal/bits.h	2024-08-23 14:44:34.856096109 +0000
@@ -167,13 +167,7 @@
 
 ABSL_ATTRIBUTE_ALWAYS_INLINE ABSL_INTERNAL_CONSTEXPR_CLZ inline int
 CountLeadingZeroes16(uint16_t x) {
-#if ABSL_HAVE_BUILTIN(__builtin_clzs)
-  static_assert(sizeof(unsigned short) == sizeof(x),  // NOLINT(runtime/int)
-                "__builtin_clzs does not take 16-bit arg");
-  return x == 0 ? 16 : __builtin_clzs(x);
-#else
   return CountLeadingZeroes32(x) - 16;
-#endif
 }
 
 ABSL_ATTRIBUTE_ALWAYS_INLINE ABSL_INTERNAL_CONSTEXPR_CLZ inline int
